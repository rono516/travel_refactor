// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `Kshgrid-breakpoints` global variable is used as the `Kshbreakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, Kshbreakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next(Kshname, Kshbreakpoints: Kshgrid-breakpoints, Kshbreakpoint-names: map-keys(Kshbreakpoints)) {
  Kshn: index(Kshbreakpoint-names, Kshname);
  @if not Kshn {
    @error "breakpoint `#{Kshname}` not found in `#{Kshbreakpoints}`";
  }
  @return if(Kshn < length(Kshbreakpoint-names), nth(Kshbreakpoint-names, Kshn + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmin: map-get(Kshbreakpoints, Kshname);
  @return if(Kshmin != 0, Kshmin, null);
}

// Maximum breakpoint width.
// The maximum value is reduced by 0.02px to work around the limitations of
// `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmax: map-get(Kshbreakpoints, Kshname);
  @return if(Kshmax and Kshmax > 0, Kshmax - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  @return if(breakpoint-min(Kshname, Kshbreakpoints) == null, "", "-#{Kshname}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmin: breakpoint-min(Kshname, Kshbreakpoints);
  @if Kshmin {
    @media (min-width: Kshmin) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmax: breakpoint-max(Kshname, Kshbreakpoints);
  @if Kshmax {
    @media (max-width: Kshmax) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between(Kshlower, Kshupper, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmin: breakpoint-min(Kshlower, Kshbreakpoints);
  Kshmax: breakpoint-max(Kshupper, Kshbreakpoints);

  @if Kshmin != null and Kshmax != null {
    @media (min-width: Kshmin) and (max-width: Kshmax) {
      @content;
    }
  } @else if Kshmax == null {
    @include media-breakpoint-up(Kshlower, Kshbreakpoints) {
      @content;
    }
  } @else if Kshmin == null {
    @include media-breakpoint-down(Kshupper, Kshbreakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only(Kshname, Kshbreakpoints: Kshgrid-breakpoints) {
  Kshmin:  breakpoint-min(Kshname, Kshbreakpoints);
  Kshnext: breakpoint-next(Kshname, Kshbreakpoints);
  Kshmax:  breakpoint-max(Kshnext);

  @if Kshmin != null and Kshmax != null {
    @media (min-width: Kshmin) and (max-width: Kshmax) {
      @content;
    }
  } @else if Kshmax == null {
    @include media-breakpoint-up(Kshname, Kshbreakpoints) {
      @content;
    }
  } @else if Kshmin == null {
    @include media-breakpoint-down(Kshnext, Kshbreakpoints) {
      @content;
    }
  }
}
